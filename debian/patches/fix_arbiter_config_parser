--- a/shinken/objects/config.py
+++ b/shinken/objects/config.py
@@ -746,9 +746,6 @@
     def early_arbiter_linking(self):
         """ Prepare the arbiter for early operations """
 
-        # Should look at hacking command_file module first
-        self.hack_old_nagios_parameters_for_arbiter()
-
         if len(self.arbiters) == 0:
             logger.warning("There is no arbiter, I add one in localhost:7770")
             a = ArbiterLink({'arbiter_name': 'Default-Arbiter',
@@ -757,6 +754,9 @@
                              'spare': '0'})
             self.arbiters = ArbiterLinks([a])
 
+        # Should look at hacking command_file module first
+        self.hack_old_nagios_parameters_for_arbiter()
+
         # First fill default
         self.arbiters.fill_default()
         self.modules.fill_default()
@@ -1259,7 +1259,7 @@
     def got_arbiter_module_type_defined(self, mod_type):
         for a in self.arbiters:
             # Do like the linkify will do after....
-            for m in getattr(a, 'modules', '').split(','):
+            for m in getattr(a, 'modules', []):
                 # So look at what the arbiter try to call as module
                 m = m.strip()
                 # Ok, now look in modules...
@@ -1428,8 +1428,8 @@
             for (mod, data) in mod_to_add:
                 logger.warning("Module %s was autogenerated", data['module_name'])
                 for a in self.arbiters:
-                    a.modules = ','.join([getattr(a, 'modules', ''), data['module_name']])
-                self.modules.items[mod.id] = mod
+                    a.modules = getattr(a, 'modules', []) + [data['module_name']]
+                self.modules.add_item(mod)
 
 
     # Set our timezone value and give it too to unset satellites
